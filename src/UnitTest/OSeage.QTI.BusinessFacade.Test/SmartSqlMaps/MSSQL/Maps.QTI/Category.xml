<?xml version="1.0" encoding="utf-8" ?>
<!--
//*******************************
// Create By 流年 公子
// Date 2019-07-03 13:49
// Code Generate By SmartCode
// Code Generate Github : https://github.com/Ahoo-Wang/SmartCode
//*******************************-->

<SmartSqlMap Scope="Category" xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">

    <ResultMaps>
        <ResultMap Id="CategoryResultMap">
                <Result Column="row_key" Property="RowKey" />
                <Result Column="category_key_nodes" Property="CategoryKeyNodes" />
                <Result Column="category_name" Property="CategoryName" />
                <Result Column="category_name_path" Property="CategoryNamePath" />
                <Result Column="category_level" Property="CategoryLevel" />
                <Result Column="parent_key" Property="ParentKey" />
                <Result Column="status" Property="Status" />
                <Result Column="user_key" Property="UserKey" />
                <Result Column="create_time" Property="CreateTime" />
                <Result Column="update_time" Property="UpdateTime" />
                <Result Column="remark" Property="Remark" />
        </ResultMap>
    </ResultMaps>
    <Statements>
        <Statement Id="QueryParams">
            <Where>
                    <IsNotEmpty Prepend="And" Property="RowKey">
                        T.row_key = @RowKey
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="CategoryKeyNodes">
                        T.category_key_nodes = @CategoryKeyNodes
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="CategoryName">
                        T.category_name = @CategoryName
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="CategoryNamePath">
                        T.category_name_path = @CategoryNamePath
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="CategoryLevel">
                        T.category_level = @CategoryLevel
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="ParentKey">
                        T.parent_key = @ParentKey
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="Status">
                        T.status = @Status
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="UserKey">
                        T.user_key = @UserKey
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="CreateTime">
                        T.create_time = @CreateTime
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="UpdateTime">
                        T.update_time = @UpdateTime
                    </IsNotEmpty>
                    <IsNotEmpty Prepend="And" Property="Remark">
                        T.remark = @Remark
                    </IsNotEmpty>
            </Where>
        </Statement>


<!--新增-->
<Statement Id="Insert">
    INSERT INTO tbl_category
    (
      row_key,
      category_key_nodes,
      category_name,
      category_name_path,
      category_level,
      parent_key,
      status,
      user_key,
      create_time,
      update_time,
      remark
    )
    VALUES
    (
      @RowKey,
      @CategoryKeyNodes,
      @CategoryName,
      @CategoryNamePath,
      @CategoryLevel,
      @ParentKey,
      @Status,
      @UserKey,
      @CreateTime,
      @UpdateTime,
      @Remark
    )
</Statement>

<!--删除-->
<Statement Id="Delete">
    Delete From tbl_category
    Where row_key=@RowKey
</Statement>

<!--更新-->
<Statement Id="Update">
    UPDATE tbl_category
    <Set>
                <IsProperty Prepend="," Property="CategoryKeyNodes">
                    category_key_nodes = @CategoryKeyNodes
                </IsProperty>
                <IsProperty Prepend="," Property="CategoryName">
                    category_name = @CategoryName
                </IsProperty>
                <IsProperty Prepend="," Property="CategoryNamePath">
                    category_name_path = @CategoryNamePath
                </IsProperty>
                <IsProperty Prepend="," Property="CategoryLevel">
                    category_level = @CategoryLevel
                </IsProperty>
                <IsProperty Prepend="," Property="ParentKey">
                    parent_key = @ParentKey
                </IsProperty>
                <IsProperty Prepend="," Property="Status">
                    status = @Status
                </IsProperty>
                <IsProperty Prepend="," Property="UserKey">
                    user_key = @UserKey
                </IsProperty>
                <IsProperty Prepend="," Property="CreateTime">
                    create_time = @CreateTime
                </IsProperty>
                <IsProperty Prepend="," Property="UpdateTime">
                    update_time = @UpdateTime
                </IsProperty>
                <IsProperty Prepend="," Property="Remark">
                    remark = @Remark
                </IsProperty>
    </Set>
    Where row_key=@RowKey
</Statement>

    <!--获取数据列-->
    <Statement Id="Query" ResultMap="CategoryResultMap">
        SELECT
        <IsNotEmpty Prepend="Top" Property="Taken">
            (@Taken)
        </IsNotEmpty>
        T.* From tbl_category T
        <Include RefId="QueryParams"/>
        <Switch Prepend="Order By" Property="OrderBy">
            <Default>
                T.row_key Desc
            </Default>
        </Switch>
    </Statement>


    <!--获取分页数据-->
    <Statement Id="QueryByPage" ResultMap="CategoryResultMap">

                Select TT.* From
                (Select ROW_NUMBER() Over(Order By T.row_key Desc) Row_Index,T.* From tbl_category T With(NoLock)
                <Include RefId="QueryParams"/>) TT
                Where TT.Row_Index Between ((@PageIndex-1)*@PageSize+1) And (@PageIndex*@PageSize);
                </Statement>


<!--获取记录数-->
<Statement Id="GetRecord">
    Select Count(1) From tbl_category T
    <Include RefId="QueryParams" />
</Statement>

    <!--获取表映射实体-->
    <Statement Id="GetEntity" ResultMap="CategoryResultMap">
        Select Top 1 T.* From tbl_category T With(NoLock)
        <Where Min="1">
                <IsNotEmpty Prepend="And" Property="RowKey">
                    T.row_key= @RowKey
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="CategoryKeyNodes">
                    T.category_key_nodes= @CategoryKeyNodes
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="CategoryName">
                    T.category_name= @CategoryName
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="CategoryNamePath">
                    T.category_name_path= @CategoryNamePath
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="CategoryLevel">
                    T.category_level= @CategoryLevel
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="ParentKey">
                    T.parent_key= @ParentKey
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="Status">
                    T.status= @Status
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="UserKey">
                    T.user_key= @UserKey
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="CreateTime">
                    T.create_time= @CreateTime
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="UpdateTime">
                    T.update_time= @UpdateTime
                </IsNotEmpty>
                <IsNotEmpty Prepend="And" Property="Remark">
                    T.remark= @Remark
                </IsNotEmpty>
        </Where>
    </Statement>


<!--是否存在该记录-->
<Statement Id="IsExist">
    Select Count(1) From tbl_category T
    <Include RefId="QueryParams" />
</Statement>


    </Statements>
</SmartSqlMap>